{"version":3,"sources":["components/form-input/form-input.jsx","components/button/button.jsx","components/form/form.component.js","App.js","index.js"],"names":["FormInput","label","handleChange","id","otherProps","className","onChange","value","length","htmlFor","Button","handleClick","onClick","Form","e","target","name","setState","console","log","state","population","timeToElapse","reportedCases","totalHospitalBeds","periodType","this","aria-label","required","type","min","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iXAYeA,G,MATE,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,GAAOC,EAAc,6CACxD,OAAO,yBAAKC,UAAU,SAClB,2CAAWD,EAAX,CAAuBE,SAAUJ,EAAcG,UAAU,gBAErDJ,EAAO,2BAAOI,UAAS,UAAKD,EAAWG,MAAMC,OAAQ,SAAS,GAAvC,qBAA8DC,QAASN,GAAKF,GAAgB,QCGhHS,G,MANA,SAAC,GAAyC,IAAxCT,EAAuC,EAAvCA,MAAOU,EAAgC,EAAhCA,YAAgBP,EAAgB,uCACpD,OACI,0CAAQQ,QAASD,GAAiBP,EAAlC,CAA8CC,UAAU,QAAOJ,EAA/D,OCsGOY,E,kDArGX,aAAc,IAAD,8BACT,gBAUJX,aAAc,SAAAY,GAAI,IAAD,EACSA,EAAEC,OAAjBC,EADM,EACNA,KAAMT,EADA,EACAA,MACb,EAAKU,SAAL,eACKD,EAAMT,KAdF,EAiBbI,YAAa,WACTO,QAAQC,IAAI,EAAKC,OACjB,EAAKH,SAAS,CACVI,WAAY,GACZC,aAAa,GACbC,cAAe,GACfC,kBAAmB,GACnBC,WAAY,UAtBhB,EAAKL,MAAO,CACRC,WAAY,GACZC,aAAa,GACbC,cAAe,GACfC,kBAAmB,GACnBC,WAAY,QAPP,E,qDA4BH,IAAD,EAC4EC,KAAKN,MAA/EK,EADF,EACEA,WAAYH,EADd,EACcA,aAAcC,EAD5B,EAC4BA,cAAeF,EAD3C,EAC2CA,WAAYG,EADvD,EACuDA,kBAC5D,OACI,yBAAKnB,UAAU,kBACX,8BACI,wBAAIA,UAAU,WAAd,sBACA,kBAAC,EAAD,CACAH,aAAcwB,KAAKxB,aACnBc,KAAM,aACNb,GAAG,aACHI,MAAOc,EACPpB,MAAM,YACN0B,aAAY,kBACZC,UAAQ,EACRC,KAAK,SACLC,IAAI,MAEJ,kBAAC,EAAD,CAAW5B,aAAcwB,KAAKxB,aAC9Bc,KAAM,eACNb,GAAG,eACHI,MAAOe,EACPrB,MAAM,iBACN0B,aAAY,uBACZC,UAAQ,EACRC,KAAK,SACLC,IAAI,MAEJ,kBAAC,EAAD,CAAW5B,aAAcwB,KAAKxB,aAC9Bc,KAAM,gBACNb,GAAI,gBACJI,MAAOgB,EACPtB,MAAM,iBACN0B,aAAY,sBACZC,UAAQ,EACRC,KAAK,SACLC,IAAI,MAEJ,kBAAC,EAAD,CAAW5B,aAAcwB,KAAKxB,aAC9Bc,KAAM,oBACNb,GAAG,oBACHI,MAAOiB,EACPvB,MAAM,sBACN0B,aAAY,2BACZC,UAAQ,EACRC,KAAK,SACLC,IAAI,MAEJ,6BACI,2BAAOrB,QAAQ,aAAaJ,UAAU,gBAAtC,eACA,4BAAQC,SAAUoB,KAAKxB,aAAcK,MAAQkB,EAAYT,KAAK,aAAaX,UAAU,cAAcsB,aAAW,2BAC1G,4BAASpB,MAAM,OAAOoB,aAAW,QAAjC,QACA,4BAAQpB,MAAM,QAAQoB,aAAW,SAAjC,SACA,4BAAQpB,MAAM,SAASoB,aAAW,UAAlC,YAKR,yBAAKtB,UAAU,eACX,kBAAC,EAAD,CACAM,YAAae,KAAKf,YAClBV,MAAM,mBACN4B,KAAK,kB,GA1FVE,IAAMC,WCMVC,MARf,WACE,OACE,yBAAK5B,UAAU,OACb,kBAAC,EAAD,CAAMA,UAAU,WCFtB6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e9a5066e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './form-input.scss'\r\n\r\nconst FormInput =({label,handleChange, id, ...otherProps})=>{\r\n    return <div className='group'>\r\n        <input {...otherProps} onChange={handleChange} className='form-input' />\r\n        {\r\n            label?(<label className={`${otherProps.value.length? 'shrink':''} form-input-label` }htmlFor={id}>{label}</label>):null\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default FormInput","import React from 'react';\r\nimport  './button.scss'\r\n\r\n\r\nconst Button = ({label, handleClick, ...otherProps}) => {\r\n    return (\r\n        <button onClick={handleClick} {...otherProps} className='btn'>{label} </button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react'\r\nimport './form.styles.scss'\r\nimport FormInput from '../form-input/form-input'\r\nimport Button from '../button/button'\r\n\r\n\r\nclass Form extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            population: '',\r\n            timeToElapse:'',\r\n            reportedCases: '',\r\n            totalHospitalBeds: '',\r\n            periodType: 'days',\r\n            }\r\n    }\r\n    \r\n    handleChange =e=>{\r\n        const {name, value} = e.target\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    handleClick =()=>{\r\n        console.log(this.state)\r\n        this.setState({\r\n            population: '',\r\n            timeToElapse:'',\r\n            reportedCases: '',\r\n            totalHospitalBeds: '',\r\n            periodType: 'days',\r\n        })\r\n    }\r\n\r\n    render (){\r\n        const{ periodType, timeToElapse, reportedCases, population, totalHospitalBeds} = this.state\r\n        return (\r\n            <div className='form-container'>\r\n                <form >\r\n                    <h1 className='heading'>My Covid Estimator</h1>\r\n                    <FormInput\r\n                    handleChange={this.handleChange}\r\n                    name={'population'}\r\n                    id='population'\r\n                    value={population}\r\n                    label='Poulation'\r\n                    aria-label={'data-population'}\r\n                    required\r\n                    type='number'\r\n                    min='0'\r\n                    />\r\n                    <FormInput handleChange={this.handleChange}\r\n                    name={'timeToElapse'}\r\n                    id='timeToElapse'\r\n                    value={timeToElapse}\r\n                    label='Time To Elapse'\r\n                    aria-label={' data-time-to-elapse'}\r\n                    required\r\n                    type='number'\r\n                    min='0'\r\n                    />\r\n                    <FormInput handleChange={this.handleChange}  \r\n                    name={'reportedCases'} \r\n                    id={'reportedCases'} \r\n                    value={reportedCases}\r\n                    label='Reported Cases'\r\n                    aria-label={'data-reported-cases'}\r\n                    required\r\n                    type='number'\r\n                    min='0'\r\n                    />\r\n                    <FormInput handleChange={this.handleChange}\r\n                    name={'totalHospitalBeds'}\r\n                    id='totalHospitalBeds'\r\n                    value={totalHospitalBeds}\r\n                    label='Total Hospital Beds'\r\n                    aria-label={'data-total-hospital-beds'}\r\n                    required\r\n                    type='number'\r\n                    min='0'\r\n                    />\r\n                    <div>\r\n                        <label htmlFor='periodType' className='select-label'>Period Type</label>\r\n                        <select onChange={this.handleChange} value ={periodType} name='periodType' className='form-select' aria-label='select data period type'>\r\n                            <option  value='days' aria-label='days'>Days</option>\r\n                            <option value=\"weeks\" aria-label='weeks'>Weeks</option>\r\n                            <option value=\"months\" aria-label='months'>Months</option>\r\n                        </select>\r\n                    </div>\r\n                    \r\n                    \r\n                    <div className='form-button'>\r\n                        <Button\r\n                        handleClick={this.handleClick}\r\n                        label='Button go Submit'\r\n                        type='button'\r\n                        \r\n                        />\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form","import React from 'react';\nimport './App.scss';\nimport Form from './components/form/form.component'\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <Form className='form' />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}